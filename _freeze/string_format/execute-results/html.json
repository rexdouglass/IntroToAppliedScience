{
  "hash": "01a8af471b3b45c8ba219647055ca626",
  "result": {
    "markdown": "# String Format {.unnumbered}\n\n**Instance of**: \n\n**AKA**: \n\n**Distinct from**: \n\n**English**: \n\n**Formalization**:\n\n$$ \n$$\n\n**Cites**: [Wikipedia]() ; [Wikidata]() ; [Wolfram]()\n\n**Code**\n\n::: panel-tabset\n\n### R\n[]()\n\nExamples:\n\n\n::: {.cell hash='string_format_cache/html/unnamed-chunk-1_9d4b7ba7f8d2bcef8b1aacc0ea0669ae'}\n\n:::\n\n\n\n### Python\n\n[7.1. Fancier Output Formatting](https://docs.python.org/3/tutorial/inputoutput.html)\n[7.1.1. Formatted String Literals](https://docs.python.org/3/tutorial/inputoutput.html#tut-f-strings)\n[Python String Format Cookbook](https://mkaz.blog/code/python-string-format-cookbook/)\n\nAs of pythong 3.6 the way to go is f strings and then memorizing the {:} format options, e.g. \"{variable:.2f}\" means print the variable with 2 floating point digits\n\nExamples:\n\n\n::: {.cell hash='string_format_cache/html/unnamed-chunk-2_d5d29d4da21b7635be379c76c64847a8'}\n\n:::\n\n\n### Jax\n\n\n::: {.cell hash='string_format_cache/html/unnamed-chunk-3_4716691b4615d91b959aada8435af2f8'}\n\n:::\n\n\n\n### SQL\n\n[]()\n\n\n::: {.cell hash='string_format_cache/html/unnamed-chunk-4_ceffa411de681cd1dcf5b106c3282156'}\n\n```{.r .cell-code}\nlibrary(DBI)\n# Create an ephemeral in-memory RSQLite database\n#con <- dbConnect(RSQLite::SQLite(), dbname = \":memory:\")\n#dbListTables(con)\n#dbWriteTable(con, \"mtcars\", mtcars)\n#dbListTables(con)\n\n#Configuration failed because libpq was not found. Try installing:\n#* deb: libpq-dev libssl-dev (Debian, Ubuntu, etc)\n#install.packages('RPostgres')\n#remotes::install_github(\"r-dbi/RPostgres\")\n#Took forever because my file permissions were broken\n#pg_lsclusters\nrequire(RPostgres)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: RPostgres\n```\n:::\n\n```{.r .cell-code}\n# Connect to the default postgres database\n#I had to follow these instructions and create both a username and database that matched my ubuntu name\n#https://www.digitalocean.com/community/tutorials/how-to-install-postgresql-on-ubuntu-20-04-quickstart\ncon <- dbConnect(RPostgres::Postgres())\n```\n:::\n\n::: {.cell hash='string_format_cache/html/unnamed-chunk-5_f2e00283c342aa5ea8992f939761c4b6'}\n\n```{.sql .cell-code}\n\n```\n:::\n\n\n### Torch\n\n\n::: {.cell hash='string_format_cache/html/unnamed-chunk-6_72e91c02c449c23be551460098591370'}\n\n```{.python .cell-code}\nimport torch\n```\n:::\n\n\n:::\n\n## Bayesian\n\n**English**: \n**Formalization**:\n\n$$\n$$\n\nCites:\n\n**Code**\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}