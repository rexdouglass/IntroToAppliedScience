{
  "hash": "6a0677d3717166b408fd5f8cc22d61e3",
  "result": {
    "markdown": "# Random Variable  {.unnumbered}\n\n**Instance of**: measurable function\n\n**AKA**: random quantity, aleatory variable, or stochastic variable\n\n**Distinct from**: \n\n**English**: A variable which takes values from a sample space, where a probablity distribution describes which values/sets of values are more likely to be taken.\n\n**Formalization**:\n\nA random variable is just a function mapping outcomes to some measurement space.\n$$ \nX:\\Omega \\mapsto E\n$$\n\n::: {.column-margin}\nThe measurement space is usually the reals, $\\mathbb{R}$. The outcomes are formally supposed to be [probability spaces](https://en.wikipedia.org/wiki/Probability_space), which are defined as triples $(\\omega, \\mathcal{F}, P)$. Where $\\mathcal{F}$ could be sets of more than 1 of the possible outcomes, and $P$ maps each possible set to a 0-1 probaility.\n:::\n\n\n\n$$ \nP(X \\in S)=P({\\omega\\in \\Omega| X(\\omega) \\in S})\n$$\n\n\n    \n**Cites**: [Wikipedia](https://en.wikipedia.org/wiki/Random_variable) ; [Wikidata]() ; [Wolfram]()\n  \n**Code**\n    \n::: panel-tabset\n  \n### R\n[]()\n  \nExamples:\n    \n\n::: {.cell hash='randomvariable_cache/html/unnamed-chunk-1_79b3ddec9551cd285c2511237a06aabb'}\n\n:::\n\n\n\n### Python\n\n[]()\n\nExamples:\n  \n\n::: {.cell hash='randomvariable_cache/html/unnamed-chunk-2_b544dc28a394aa82272c1dcef5e7256e'}\n\n:::\n\n\n\n### SQL\n\n[]()\n\n\n::: {.cell hash='randomvariable_cache/html/unnamed-chunk-3_b3b7d462c1563e99599fe265e3eeea76'}\n\n```{.r .cell-code}\nlibrary(DBI)\n# Create an ephemeral in-memory RSQLite database\n#con <- dbConnect(RSQLite::SQLite(), dbname = \":memory:\")\n#dbListTables(con)\n#dbWriteTable(con, \"mtcars\", mtcars)\n#dbListTables(con)\n\n#Configuration failed because libpq was not found. Try installing:\n#* deb: libpq-dev libssl-dev (Debian, Ubuntu, etc)\n#install.packages('RPostgres')\n#remotes::install_github(\"r-dbi/RPostgres\")\n#Took forever because my file permissions were broken\n#pg_lsclusters\nrequire(RPostgres)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: RPostgres\n```\n:::\n\n```{.r .cell-code}\n# Connect to the default postgres database\n#I had to follow these instructions and create both a username and database that matched my ubuntu name\n#https://www.digitalocean.com/community/tutorials/how-to-install-postgresql-on-ubuntu-20-04-quickstart\ncon <- dbConnect(RPostgres::Postgres())\n```\n:::\n\n::: {.cell hash='randomvariable_cache/html/unnamed-chunk-4_4dc1d94ea8896e0301818b005e337238'}\n\n```{.sql .cell-code}\n\n```\n:::\n\n\n### Torch\n\n\n::: {.cell hash='randomvariable_cache/html/unnamed-chunk-5_11f9dd81a8b7bcc937463f756c207a9d'}\n\n```{.python .cell-code}\nimport torch\n```\n:::\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}