---
title: "Vector/Matrix/Tensor"
---

## Introduction
  
**Instance of**: algebraic object / data structure

**AKA**: array, matrices

**Distinct from**: list

**English**: Vector, matrices, and tensors are like lists in that they are a collection of objects which are indexed. They differ in that the index can be multi-dimensional, where vectors are 1-d indexed, matrices are 2-d indexed, and tensors are m-d indexed. They also are typically constrained to have objects that share the same type, e.g. numbers or strings.

**Formalization**:

$$ 
$$
    
    
**Cites**: 

Array: [Wikipedia](https://en.wikipedia.org/wiki/Array_(data_structure))

Matrix: [Wikipedia](https://en.wikipedia.org/wiki/Matrix_(mathematics))

Tensor: [Wikipedia](https://en.wikipedia.org/wiki/Tensor)
  
**Code**
    
::: panel-tabset
  
### R
**Documentation**: [vector: Vectors](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/vector) ; [matrix: Matrices](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/matrix) ; [array: Multi-way Arrays](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/array)
  
Examples:

Vector
Note unlike matrix and array, the basic vector function initializes an empty vector and you have to actually use as.vector to coerce something else to vector as the constructor.
```{r}
example_vector <- as.vector(c(1,2,3,4))
example_vector
class(example_vector)
```

Matrix
Note we can choose which direction to fill the matrix with, either by row1-col1, row1-col2, row1-col3, row1-col4
```{r}
example_matrix <- matrix(c(1,2,3,4,"A","B","C","D"), nrow = 2, ncol = 4, byrow = TRUE,
               dimnames = list(c("row1", "row2"),
                               c("C.1", "C.2", "C.3", "C.4")))
example_matrix
class(example_matrix)
```


Arrays
Note array dimensions are ordered, row, column, depth, ..., M , and elements are filled row1-col1-depth1, row2-col1-depth1, row1-col2-depth1,... and so on. Note this was coerced to a string because any of the elements were a string.
```{r}
example_tensor= array(c(1,2,3,4,"A","B","C","D","+","-","*","/"),dim=c(2,3,2,2)) 
example_tensor
class(example_tensor)
```


### Python

**Documentation**: 

Examples:
  
```{python}
```


### SQL

**Documentation**: 

```{r}
library(DBI)
# Create an ephemeral in-memory RSQLite database
#con <- dbConnect(RSQLite::SQLite(), dbname = ":memory:")
#dbListTables(con)
#dbWriteTable(con, "mtcars", mtcars)
#dbListTables(con)

#Configuration failed because libpq was not found. Try installing:
#* deb: libpq-dev libssl-dev (Debian, Ubuntu, etc)
#install.packages('RPostgres')
#remotes::install_github("r-dbi/RPostgres")
#Took forever because my file permissions were broken
#pg_lsclusters
require(RPostgres)
# Connect to the default postgres database
#I had to follow these instructions and create both a username and database that matched my ubuntu name
#https://www.digitalocean.com/community/tutorials/how-to-install-postgresql-on-ubuntu-20-04-quickstart
con <- dbConnect(RPostgres::Postgres())

```

```{sql, connection=con}
```

### Torch

```{python}
import torch

```

:::

## Bayesian

**English**: 
**Formalization**:

$$
$$
  
Cites:

**Code**
  
    