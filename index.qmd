
[UNDER CONSTRUCTION NOT FOR CICRULATION]


<!--
### 
||
|  -----------          | -----------            |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |

-->

### Literature
||
| -----------          | -----------            |
| • [Broad Literature/Textbooks](chapters/unsorted/broad_lit.qmd)      | • [Unsorted](chapters/unsorted/lit.qmd)       |

### Industry
||
| -----------          | -----------            |
| • [Coding Practice](chapters/industry/practicecoding.qmd)      | • [Interview Practice](chapters/industry/interviewquestions.qmd)        |
| • [Salaries](chapters/industry/salaries.qmd)      | • [Gossip](chapters/industry/gossip.qmd)        |


### Meta-Science

||
|  -----------          | -----------            |
| • [Open Science](chapters/meta_science/open_science.qmd)      | • [Null Results](chapters/meta_science/null_results.qmd)        |
| • [Sociology of Inference](chapters/meta_science/sociologyofinference.qmd)      |        |


### Communicating Results

||
|  -----------          | -----------            |
| • [Markdown](chapters/communication/markdown.qmd)      |      |

### Computer Languages

||
|  -----------          | -----------            |
| • [Bash](chapters/languages/bash.qmd)      | • [Python](chapters/languages/python.qmd)        |
| • [R](chapters/languages/R.qmd)      | • [Pytorch](chapters/languages/pytorch.qmd)        |
| • [SQL](chapters/languages/sql.qmd)      | • [Stan](chapters/languages/stan.qmd)        |
| • [Numpyro](chapters/languages/numpyro.qmd)      | • [Jax](chapters/languages/jax.qmd)        |
| • [Tensorflow](chapters/languages/tensorflow.qmd)      |  • [Git](chapters/languages/git.qmd)       |


### Databases
||
|  -----------          | -----------            |
| • [duckdb](chapters/databases/duckdb.qmd)      | • [Postgres](chapters/databases/Postgres.qmd)        |
| • [arrow](chapters/databases/arrow.qmd)      | • [](chapters/databases/)        |
| • [](chapters/databases/)      | • [](chapters/databases/)        |
| • [](chapters/databases/)      | • [](chapters/databases/)        |
| • [](chapters/databases/)      | • [](chapters/databases/)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |

### Mathematical and Data Structures
||
|  -----------          | -----------            |
| • [set](chapters/math_and_data_structures/set.qmd)     | • [list](chapters/math_and_data_structures/list.qmd)        |
| • [](chapters/math_and_data_structures/)      | • [](chapters/math_and_data_structures/)        |
| • [trees](chapters/math_and_data_structures/trees.qmd)      | • [tensor](chapters/math_and_data_structures/tensor.qmd)        |
| • [table](chapters/math_and_data_structures/table.qmd)      | • [stacks_queues](chapters/math_and_data_structures/stacks_queues.qmd)        |
| • [set](chapters/math_and_data_structures/set.qmd)      | • [list](chapters/math_and_data_structures/list.qmd)        |
| • [linked_lists](chapters/math_and_data_structures/linked_lists.qmd)      | • [hash_table](chapters/math_and_data_structures/hash_table.qmd)        |
| • [graphs](chapters/math_and_data_structures/graphs.qmd)      | • [function](chapters/math_and_data_structures/function.qmd)        |
| • [dictionary](chapters/math_and_data_structures/dictionary.qmd)      | • [](chapters/math_and_data_structures/)        |


### Data Transformations

||
|  -----------          | -----------            |
| • [filter](chapters/data_transformation/filter.qmd)      | • [joins](chapters/data_transformation/joins.qmd)        |
| • [fuzzyrecordmatching](chapters/data_transformation/fuzzyrecordmatching.qmd)      | • [regex](chapters/data_transformation/regex.qmd)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |


### Data Loading

||
|  -----------          | -----------            |
| • [dataloaders](chapters/data_loading/dataloaders.qmd)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |
| • [](chapters//)      | • [](chapters//)        |


<!--


Mathematics is the language of the Universe, and like any foreign language, it's not something you learn, it's something you get used to. This book is an artifact resulting from getting used to it over ten years as a working scientists and before that 9 years of Phd/MA/BA. 

It is designed to be a reference guide not a coherent text. Its design philosophy is maximize first order retrievability, like an encyclopedia. The reader should be able to quickly turn to a topic (or find it through the search bar), and see multiple representations of that idea in english, formalism, code, and relevant papers. It is not designed to teach these topics for the first time, rather it is to help a working applied scientist quickly relearn and apply a topic.



```{r, echo=F, eval=F}

library(data.table)
library("readr")
files <- list.files(path="/mnt/8tb_a/rwd_github_private/IntroToAppliedScience/", pattern="*.qmd", full.names=TRUE, recursive=FALSE)
file="/mnt/8tb_a/rwd_github_private/IntroToAppliedScience//lit.qmd"
file_txts <- list()
for(file in files){
  file_txts[[file]] <- read_lines(file)
}
length(file_txts)

library(stringr)
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
url_pattern <- "https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)"
                      
urls <- str_extract_all(file_txts %>% unlist, url_pattern)
urls_vec <- urls %>% unlist() %>% str_replace("\\)$","") %>% unique()
length(urls_vec) #1219
urls_vec %>% paste("<br>") %>% writeLines("/mnt/8tb_a/rwd_github_private/IntroToAppliedScience/urls.html")
length(urls_vec)
#for(url in urls_vec[1101:1200]){browseURL(url=url)}

scraped <- read_csv("/home/skynet3/Documents/IntroToAppliedScience.csv") %>% janitor::clean_names()
scraped %>%  janitor::clean_names() %>% write_csv("/home/skynet3/Documents/IntroToAppliedScience_tolabel2.csv")

library(jsonlite)
temp <- fromJSON("/home/skynet3/Documents/IntroToAppliedScience.json")
temp %>% jsonlite::flatten() %>% janitor::clean_names() %>% write_csv("/home/skynet3/Documents/IntroToAppliedScience_tolabel.csv")

#This is obnoxious, but I have to pull the bibextra id from the json and everything else from the csv
combined <- scraped %>% 
  left_join(temp %>%  janitor::clean_names() %>% dplyr::select(doi, url, title, citation_key) )
dim(combined)
#combined$citation_key
#256 don't have abstracts
combined %>% write_csv("/home/skynet3/Documents/IntroToAppliedScience_tolabel3.csv")



url_missing <- setdiff(urls_vec, scraped$Url)
length(url_missing) #698 #oh wow only missed 98
#for(url in url_missing[601:700]){browseURL(url=url)}

url_missing[!url_missing %>% str_detect('arxiv|wikipedia|tandfonline|ssrn|ncbi|onlinelibrary|sagepub|iomedcentral|elifesciences|academic')] %>% sort() #322 that didn't pull
#There's about 200 I can't immediately dismiss as just pulling with a different URL and will need sort out more

```

-->





